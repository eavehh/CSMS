#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ Flutter –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è

echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Flutter ‚Üí CSMS Server"
echo "================================================"
echo ""

echo "1Ô∏è‚É£ HTTP API —Ç–µ—Å—Ç:"
echo "---"
RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" http://176.88.248.139:8081/api/stations)
HTTP_CODE=$(echo "$RESPONSE" | grep "HTTP_CODE:" | cut -d: -f2)
echo "–°—Ç–∞—Ç—É—Å –∫–æ–¥: $HTTP_CODE"
if [ "$HTTP_CODE" = "200" ]; then
    echo "‚úÖ HTTP API —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "$RESPONSE" | head -5 | grep -v "HTTP_CODE:"
else
    echo "‚ùå HTTP API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi
echo ""

echo "2Ô∏è‚É£ WebSocket —Ç–µ—Å—Ç (—á–µ—Ä–µ–∑ wscat, –µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω):"
echo "---"
if command -v wscat &> /dev/null; then
    timeout 3 wscat -c ws://176.88.248.139:8081/mobile-client -x '{"id":"test","method":"GET","url":"/api/stations"}' 2>&1 || echo "WebSocket —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω"
else
    echo "‚ö†Ô∏è  wscat –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: npm install -g wscat"
fi
echo ""

echo "3Ô∏è‚É£ –ü–æ—Ä—Ç 8081 –¥–æ—Å—Ç—É–ø–µ–Ω:"
echo "---"
nc -zv 176.88.248.139 8081 2>&1
echo ""

echo "4Ô∏è‚É£ DNS —Ä–µ–∑–æ–ª—é—Ü–∏—è:"
echo "---"
nslookup 176.88.248.139 2>&1 | grep -A2 "Name:"
echo ""

echo "üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:"
echo "=================================="
echo ""
echo "1. Config.dart - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ URL?"
echo "   –î–æ–ª–∂–Ω–æ –±—ã—Ç—å: ws://176.88.248.139:8081/mobile-client"
echo ""
echo "2. –õ–æ–≥–∏ Flutter –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏:"
echo "   flutter run --verbose"
echo "   –ò—â–∏—Ç–µ: 'CSMSAPI: connecting to' –∏ –æ—à–∏–±–∫–∏ WebSocket"
echo ""
echo "3. –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤ AndroidManifest.xml / Info.plist:"
echo "   Android: <uses-permission android:name=\"android.permission.INTERNET\"/>"
echo "   iOS: Allow Arbitrary Loads –≤ Info.plist"
echo ""
echo "4. –≠–º—É–ª—è—Ç–æ—Ä vs –†–µ–∞–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:"
echo "   –≠–º—É–ª—è—Ç–æ—Ä: –º–æ–∂–µ—Ç –Ω—É–∂–µ–Ω 'ws://10.0.2.2:8081' (Android)"
echo "   –†–µ–∞–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ç–æ–π –∂–µ —Å–µ—Ç–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–Ω–µ—à–Ω–∏–π IP"
echo ""
echo "5. HTTP –≤–º–µ—Å—Ç–æ HTTPS:"
echo "   Flutter –º–æ–∂–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–∑–∞—â–∏—â—ë–Ω–Ω—ã–µ HTTP/WS –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
echo "   –î–æ–±–∞–≤—å—Ç–µ –≤ AndroidManifest.xml: android:usesCleartextTraffic=\"true\""
echo ""

echo "üîß –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∏–∑ Flutter:"
echo "=========================="
echo ""
echo "–î–æ–±–∞–≤—å—Ç–µ –≤ main.dart –ø–µ—Ä–µ–¥ runApp():"
echo ""
cat << 'DART'
import 'package:http/http.dart' as http;

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  
  // –¢–µ—Å—Ç HTTP
  try {
    final response = await http.get(
      Uri.parse('http://176.88.248.139:8081/api/stations')
    ).timeout(Duration(seconds: 5));
    print('‚úÖ HTTP works: ${response.statusCode}');
  } catch (e) {
    print('‚ùå HTTP failed: $e');
  }
  
  // –¢–µ—Å—Ç WebSocket
  try {
    final channel = WebSocketChannel.connect(
      Uri.parse('ws://176.88.248.139:8081/mobile-client')
    );
    await channel.ready.timeout(Duration(seconds: 5));
    print('‚úÖ WebSocket connected');
    channel.sink.close();
  } catch (e) {
    print('‚ùå WebSocket failed: $e');
  }
  
  runApp(MyApp());
}
DART
echo ""
echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏ —Å–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å Flutter!"
