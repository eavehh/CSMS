#!/usr/bin/env node
/**
 * –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞–Ω—Ü–∏–∏ fora072 –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MeterValues
 */

const http = require('http');

const SERVER = '176.88.248.139';
const PORT = 8081;
const STATION = 'fora072';

function sendResetCommand(type) {
    const data = JSON.stringify({
        chargePointId: STATION,
        action: 'Reset',
        payload: { type }
    });

    return new Promise((resolve, reject) => {
        const req = http.request({
            hostname: SERVER,
            port: PORT,
            path: '/api/remote-control',
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Content-Length': Buffer.byteLength(data)
            }
        }, (res) => {
            let body = '';
            res.on('data', chunk => body += chunk);
            res.on('end', () => {
                try {
                    const response = JSON.parse(body);
                    resolve(response);
                } catch (e) {
                    resolve({ success: false, error: 'Invalid response' });
                }
            });
        });

        req.on('error', reject);
        req.write(data);
        req.end();
    });
}

async function main() {
    console.log('üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞–Ω—Ü–∏–∏ fora072 –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
    console.log('===========================================================\n');

    console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É Reset (Soft)...');
    try {
        const result = await sendResetCommand('Soft');
        if (result.success) {
            console.log('‚úÖ –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
            console.log('‚è≥ –°—Ç–∞–Ω—Ü–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...\n');

            console.log('üìù –ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏:');
            console.log('   1. –ü–æ–¥–æ–∂–¥–∏—Ç–µ ~30 —Å–µ–∫—É–Ω–¥');
            console.log('   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∑–∞—Ä—è–¥–∫—É –Ω–∞ –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–µ 3');
            console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:');
            console.log('      ssh root@176.88.248.139');
            console.log('      tail -f /root/CSMS/logs/app-$(date +%Y-%m-%d).log | grep MeterValues');
            console.log('   4. –í—ã –î–û–õ–ñ–ù–´ —É–≤–∏–¥–µ—Ç—å [MeterValues] –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥! üîã‚ö°\n');
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞:', result.error || result.message);
        }
    } catch (e) {
        console.log('‚ùå –û—à–∏–±–∫–∞:', e.message);
    }
}

main().catch(e => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', e);
    process.exit(1);
});
